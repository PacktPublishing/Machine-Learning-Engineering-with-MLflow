version: '3.7'
services:
  jupyter:
    user: root
    build:
      context: .
      dockerfile: ./docker/jupyter/Dockerfile
      target: ${JUPYTER_TARGET}
      args: 
        - MLFLOW_ARTIFACT_STORE=/${MLFLOW_ARTIFACT_STORE}
        - MLFLOW_VERSION=${MLFLOW_VERSION}
        - JUPYTER_BASE_IMAGE=${JUPYTER_BASE_IMAGE}
        - JUPYTER_BASE_VERSION=${JUPYTER_BASE_VERSION}
        - JUPYTER_USERNAME=${JUPYTER_USERNAME}
    image: ${IMAGE_OWNER}/${REPO_SLUG}/${JUPYTER_TARGET}:${VERSION}
    ports:
      - "${JUPYTER_PORT}:${JUPYTER_PORT}"
    depends_on: 
      - mlflow
    environment: 
      MLFLOW_TRACKING_URI: ${MLFLOW_TRACKING_URI}
      JUPYTER_ENABLE_LAB: ${JUPYTER_ENABLE_LAB}
      NB_USER: ${JUPYTER_USERNAME}
      NB_UID: ${JUPYTER_UID}
      CHOWN_HOME: "yes"
      CHOWN_HOME_OPTS: '-R'
      CHOWN_EXTRA: ${JUPYTER_CHOWN_EXTRA}
      CHOWN_EXTRA_OPTS: '-R'
    volumes:
      - ./:/home/${JUPYTER_USERNAME}/work
      - ./${MLFLOW_ARTIFACT_STORE}:/${MLFLOW_ARTIFACT_STORE}
  mlflow:
    build:
      context: ./docker/mlflow
      args:
        - MLFLOW_VERSION=${MLFLOW_VERSION}
    image: ${IMAGE_OWNER}/${REPO_SLUG}/${MLFLOW_IMAGE_NAME}:${VERSION}
    expose: 
      - "${MLFLOW_TRACKING_SERVER_PORT}"
    ports:
      - "${MLFLOW_TRACKING_SERVER_PORT}:${MLFLOW_TRACKING_SERVER_PORT}"
    depends_on: 
      - postgres
    environment: 
      MLFLOW_TRACKING_SERVER_HOST: ${MLFLOW_TRACKING_SERVER_HOST}
      MLFLOW_TRACKING_SERVER_PORT: ${MLFLOW_TRACKING_SERVER_PORT}
      MLFLOW_ARTIFACT_STORE: ${MLFLOW_ARTIFACT_STORE}
      MLFLOW_BACKEND_STORE: ${MLFLOW_BACKEND_STORE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_PORT: ${POSTGRES_PORT}
      WAIT_FOR_IT_TIMEOUT: ${WAIT_FOR_IT_TIMEOUT}
    volumes:
      - ${MLFLOW_ARTIFACT_STORE}:/${MLFLOW_ARTIFACT_STORE}
  postgres:
    user: "${POSTGRES_UID}:${POSTGRES_GID}"
    build:
      context: ./docker/postgres
    image: ${IMAGE_OWNER}/${REPO_SLUG}/${POSTGRES_IMAGE_NAME}:${VERSION}
    restart: always
    environment: 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ${POSTGRES_STORE}:/var/lib/postgresql/data
